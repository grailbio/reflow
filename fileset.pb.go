// Code generated by protoc-gen-go. DO NOT EDIT.
// source: fileset.proto

package reflow

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Timestamp struct {
	Seconds              int64    `protobuf:"varint,1,opt,name=Seconds,proto3" json:"Seconds,omitempty"`
	Nanos                int64    `protobuf:"varint,2,opt,name=Nanos,proto3" json:"Nanos,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Timestamp) Reset()         { *m = Timestamp{} }
func (m *Timestamp) String() string { return proto.CompactTextString(m) }
func (*Timestamp) ProtoMessage()    {}
func (*Timestamp) Descriptor() ([]byte, []int) {
	return fileDescriptor_99a094265b32bb18, []int{0}
}

func (m *Timestamp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Timestamp.Unmarshal(m, b)
}
func (m *Timestamp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Timestamp.Marshal(b, m, deterministic)
}
func (m *Timestamp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Timestamp.Merge(m, src)
}
func (m *Timestamp) XXX_Size() int {
	return xxx_messageInfo_Timestamp.Size(m)
}
func (m *Timestamp) XXX_DiscardUnknown() {
	xxx_messageInfo_Timestamp.DiscardUnknown(m)
}

var xxx_messageInfo_Timestamp proto.InternalMessageInfo

func (m *Timestamp) GetSeconds() int64 {
	if m != nil {
		return m.Seconds
	}
	return 0
}

func (m *Timestamp) GetNanos() int64 {
	if m != nil {
		return m.Nanos
	}
	return 0
}

type FileP struct {
	Id                   string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Size                 int64      `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Source               string     `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"`
	Etag                 string     `protobuf:"bytes,4,opt,name=etag,proto3" json:"etag,omitempty"`
	LastModified         *Timestamp `protobuf:"bytes,5,opt,name=lastModified,proto3" json:"lastModified,omitempty"`
	ContentHash          string     `protobuf:"bytes,6,opt,name=contentHash,proto3" json:"contentHash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *FileP) Reset()         { *m = FileP{} }
func (m *FileP) String() string { return proto.CompactTextString(m) }
func (*FileP) ProtoMessage()    {}
func (*FileP) Descriptor() ([]byte, []int) {
	return fileDescriptor_99a094265b32bb18, []int{1}
}

func (m *FileP) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileP.Unmarshal(m, b)
}
func (m *FileP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileP.Marshal(b, m, deterministic)
}
func (m *FileP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileP.Merge(m, src)
}
func (m *FileP) XXX_Size() int {
	return xxx_messageInfo_FileP.Size(m)
}
func (m *FileP) XXX_DiscardUnknown() {
	xxx_messageInfo_FileP.DiscardUnknown(m)
}

var xxx_messageInfo_FileP proto.InternalMessageInfo

func (m *FileP) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *FileP) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *FileP) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *FileP) GetEtag() string {
	if m != nil {
		return m.Etag
	}
	return ""
}

func (m *FileP) GetLastModified() *Timestamp {
	if m != nil {
		return m.LastModified
	}
	return nil
}

func (m *FileP) GetContentHash() string {
	if m != nil {
		return m.ContentHash
	}
	return ""
}

type FilePart struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	File                 *FileP   `protobuf:"bytes,2,opt,name=file,proto3" json:"file,omitempty"`
	AssertionsGroupId    int32    `protobuf:"varint,3,opt,name=assertionsGroupId,proto3" json:"assertionsGroupId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FilePart) Reset()         { *m = FilePart{} }
func (m *FilePart) String() string { return proto.CompactTextString(m) }
func (*FilePart) ProtoMessage()    {}
func (*FilePart) Descriptor() ([]byte, []int) {
	return fileDescriptor_99a094265b32bb18, []int{2}
}

func (m *FilePart) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FilePart.Unmarshal(m, b)
}
func (m *FilePart) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FilePart.Marshal(b, m, deterministic)
}
func (m *FilePart) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FilePart.Merge(m, src)
}
func (m *FilePart) XXX_Size() int {
	return xxx_messageInfo_FilePart.Size(m)
}
func (m *FilePart) XXX_DiscardUnknown() {
	xxx_messageInfo_FilePart.DiscardUnknown(m)
}

var xxx_messageInfo_FilePart proto.InternalMessageInfo

func (m *FilePart) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *FilePart) GetFile() *FileP {
	if m != nil {
		return m.File
	}
	return nil
}

func (m *FilePart) GetAssertionsGroupId() int32 {
	if m != nil {
		return m.AssertionsGroupId
	}
	return 0
}

type FileMappingPart struct {
	Depth                int32    `protobuf:"varint,1,opt,name=depth,proto3" json:"depth,omitempty"`
	Index                int32    `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	Key                  string   `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	FileId               int32    `protobuf:"varint,4,opt,name=fileId,proto3" json:"fileId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileMappingPart) Reset()         { *m = FileMappingPart{} }
func (m *FileMappingPart) String() string { return proto.CompactTextString(m) }
func (*FileMappingPart) ProtoMessage()    {}
func (*FileMappingPart) Descriptor() ([]byte, []int) {
	return fileDescriptor_99a094265b32bb18, []int{3}
}

func (m *FileMappingPart) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileMappingPart.Unmarshal(m, b)
}
func (m *FileMappingPart) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileMappingPart.Marshal(b, m, deterministic)
}
func (m *FileMappingPart) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileMappingPart.Merge(m, src)
}
func (m *FileMappingPart) XXX_Size() int {
	return xxx_messageInfo_FileMappingPart.Size(m)
}
func (m *FileMappingPart) XXX_DiscardUnknown() {
	xxx_messageInfo_FileMappingPart.DiscardUnknown(m)
}

var xxx_messageInfo_FileMappingPart proto.InternalMessageInfo

func (m *FileMappingPart) GetDepth() int32 {
	if m != nil {
		return m.Depth
	}
	return 0
}

func (m *FileMappingPart) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *FileMappingPart) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *FileMappingPart) GetFileId() int32 {
	if m != nil {
		return m.FileId
	}
	return 0
}

type BlobProperties struct {
	Etag                 string   `protobuf:"bytes,1,opt,name=etag,proto3" json:"etag,omitempty"`
	LastModified         string   `protobuf:"bytes,2,opt,name=lastModified,proto3" json:"lastModified,omitempty"`
	Size                 string   `protobuf:"bytes,3,opt,name=size,proto3" json:"size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlobProperties) Reset()         { *m = BlobProperties{} }
func (m *BlobProperties) String() string { return proto.CompactTextString(m) }
func (*BlobProperties) ProtoMessage()    {}
func (*BlobProperties) Descriptor() ([]byte, []int) {
	return fileDescriptor_99a094265b32bb18, []int{4}
}

func (m *BlobProperties) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlobProperties.Unmarshal(m, b)
}
func (m *BlobProperties) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlobProperties.Marshal(b, m, deterministic)
}
func (m *BlobProperties) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlobProperties.Merge(m, src)
}
func (m *BlobProperties) XXX_Size() int {
	return xxx_messageInfo_BlobProperties.Size(m)
}
func (m *BlobProperties) XXX_DiscardUnknown() {
	xxx_messageInfo_BlobProperties.DiscardUnknown(m)
}

var xxx_messageInfo_BlobProperties proto.InternalMessageInfo

func (m *BlobProperties) GetEtag() string {
	if m != nil {
		return m.Etag
	}
	return ""
}

func (m *BlobProperties) GetLastModified() string {
	if m != nil {
		return m.LastModified
	}
	return ""
}

func (m *BlobProperties) GetSize() string {
	if m != nil {
		return m.Size
	}
	return ""
}

type AssertionsKeyPart struct {
	Id      int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Subject string `protobuf:"bytes,2,opt,name=subject,proto3" json:"subject,omitempty"`
	// Types that are valid to be assigned to Properties:
	//	*AssertionsKeyPart_Bp
	Properties           isAssertionsKeyPart_Properties `protobuf_oneof:"properties"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *AssertionsKeyPart) Reset()         { *m = AssertionsKeyPart{} }
func (m *AssertionsKeyPart) String() string { return proto.CompactTextString(m) }
func (*AssertionsKeyPart) ProtoMessage()    {}
func (*AssertionsKeyPart) Descriptor() ([]byte, []int) {
	return fileDescriptor_99a094265b32bb18, []int{5}
}

func (m *AssertionsKeyPart) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssertionsKeyPart.Unmarshal(m, b)
}
func (m *AssertionsKeyPart) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssertionsKeyPart.Marshal(b, m, deterministic)
}
func (m *AssertionsKeyPart) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssertionsKeyPart.Merge(m, src)
}
func (m *AssertionsKeyPart) XXX_Size() int {
	return xxx_messageInfo_AssertionsKeyPart.Size(m)
}
func (m *AssertionsKeyPart) XXX_DiscardUnknown() {
	xxx_messageInfo_AssertionsKeyPart.DiscardUnknown(m)
}

var xxx_messageInfo_AssertionsKeyPart proto.InternalMessageInfo

func (m *AssertionsKeyPart) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *AssertionsKeyPart) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

type isAssertionsKeyPart_Properties interface {
	isAssertionsKeyPart_Properties()
}

type AssertionsKeyPart_Bp struct {
	Bp *BlobProperties `protobuf:"bytes,3,opt,name=bp,proto3,oneof"`
}

func (*AssertionsKeyPart_Bp) isAssertionsKeyPart_Properties() {}

func (m *AssertionsKeyPart) GetProperties() isAssertionsKeyPart_Properties {
	if m != nil {
		return m.Properties
	}
	return nil
}

func (m *AssertionsKeyPart) GetBp() *BlobProperties {
	if x, ok := m.GetProperties().(*AssertionsKeyPart_Bp); ok {
		return x.Bp
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*AssertionsKeyPart) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*AssertionsKeyPart_Bp)(nil),
	}
}

type AssertionsGroupPart struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	KeyIds               []int32  `protobuf:"varint,2,rep,packed,name=keyIds,proto3" json:"keyIds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AssertionsGroupPart) Reset()         { *m = AssertionsGroupPart{} }
func (m *AssertionsGroupPart) String() string { return proto.CompactTextString(m) }
func (*AssertionsGroupPart) ProtoMessage()    {}
func (*AssertionsGroupPart) Descriptor() ([]byte, []int) {
	return fileDescriptor_99a094265b32bb18, []int{6}
}

func (m *AssertionsGroupPart) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssertionsGroupPart.Unmarshal(m, b)
}
func (m *AssertionsGroupPart) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssertionsGroupPart.Marshal(b, m, deterministic)
}
func (m *AssertionsGroupPart) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssertionsGroupPart.Merge(m, src)
}
func (m *AssertionsGroupPart) XXX_Size() int {
	return xxx_messageInfo_AssertionsGroupPart.Size(m)
}
func (m *AssertionsGroupPart) XXX_DiscardUnknown() {
	xxx_messageInfo_AssertionsGroupPart.DiscardUnknown(m)
}

var xxx_messageInfo_AssertionsGroupPart proto.InternalMessageInfo

func (m *AssertionsGroupPart) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *AssertionsGroupPart) GetKeyIds() []int32 {
	if m != nil {
		return m.KeyIds
	}
	return nil
}

type FilesetPart struct {
	// Types that are valid to be assigned to Part:
	//	*FilesetPart_Fp
	//	*FilesetPart_Fmp
	//	*FilesetPart_Akp
	//	*FilesetPart_Agp
	Part                 isFilesetPart_Part `protobuf_oneof:"part"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *FilesetPart) Reset()         { *m = FilesetPart{} }
func (m *FilesetPart) String() string { return proto.CompactTextString(m) }
func (*FilesetPart) ProtoMessage()    {}
func (*FilesetPart) Descriptor() ([]byte, []int) {
	return fileDescriptor_99a094265b32bb18, []int{7}
}

func (m *FilesetPart) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FilesetPart.Unmarshal(m, b)
}
func (m *FilesetPart) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FilesetPart.Marshal(b, m, deterministic)
}
func (m *FilesetPart) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FilesetPart.Merge(m, src)
}
func (m *FilesetPart) XXX_Size() int {
	return xxx_messageInfo_FilesetPart.Size(m)
}
func (m *FilesetPart) XXX_DiscardUnknown() {
	xxx_messageInfo_FilesetPart.DiscardUnknown(m)
}

var xxx_messageInfo_FilesetPart proto.InternalMessageInfo

type isFilesetPart_Part interface {
	isFilesetPart_Part()
}

type FilesetPart_Fp struct {
	Fp *FilePart `protobuf:"bytes,1,opt,name=fp,proto3,oneof"`
}

type FilesetPart_Fmp struct {
	Fmp *FileMappingPart `protobuf:"bytes,2,opt,name=fmp,proto3,oneof"`
}

type FilesetPart_Akp struct {
	Akp *AssertionsKeyPart `protobuf:"bytes,3,opt,name=akp,proto3,oneof"`
}

type FilesetPart_Agp struct {
	Agp *AssertionsGroupPart `protobuf:"bytes,4,opt,name=agp,proto3,oneof"`
}

func (*FilesetPart_Fp) isFilesetPart_Part() {}

func (*FilesetPart_Fmp) isFilesetPart_Part() {}

func (*FilesetPart_Akp) isFilesetPart_Part() {}

func (*FilesetPart_Agp) isFilesetPart_Part() {}

func (m *FilesetPart) GetPart() isFilesetPart_Part {
	if m != nil {
		return m.Part
	}
	return nil
}

func (m *FilesetPart) GetFp() *FilePart {
	if x, ok := m.GetPart().(*FilesetPart_Fp); ok {
		return x.Fp
	}
	return nil
}

func (m *FilesetPart) GetFmp() *FileMappingPart {
	if x, ok := m.GetPart().(*FilesetPart_Fmp); ok {
		return x.Fmp
	}
	return nil
}

func (m *FilesetPart) GetAkp() *AssertionsKeyPart {
	if x, ok := m.GetPart().(*FilesetPart_Akp); ok {
		return x.Akp
	}
	return nil
}

func (m *FilesetPart) GetAgp() *AssertionsGroupPart {
	if x, ok := m.GetPart().(*FilesetPart_Agp); ok {
		return x.Agp
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*FilesetPart) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*FilesetPart_Fp)(nil),
		(*FilesetPart_Fmp)(nil),
		(*FilesetPart_Akp)(nil),
		(*FilesetPart_Agp)(nil),
	}
}

func init() {
	proto.RegisterType((*Timestamp)(nil), "reflow.Timestamp")
	proto.RegisterType((*FileP)(nil), "reflow.FileP")
	proto.RegisterType((*FilePart)(nil), "reflow.FilePart")
	proto.RegisterType((*FileMappingPart)(nil), "reflow.FileMappingPart")
	proto.RegisterType((*BlobProperties)(nil), "reflow.BlobProperties")
	proto.RegisterType((*AssertionsKeyPart)(nil), "reflow.AssertionsKeyPart")
	proto.RegisterType((*AssertionsGroupPart)(nil), "reflow.AssertionsGroupPart")
	proto.RegisterType((*FilesetPart)(nil), "reflow.FilesetPart")
}

func init() { proto.RegisterFile("fileset.proto", fileDescriptor_99a094265b32bb18) }

var fileDescriptor_99a094265b32bb18 = []byte{
	// 527 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x53, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0xad, 0xed, 0xd8, 0xa5, 0xe3, 0xb6, 0x24, 0x4b, 0x55, 0x4c, 0xe1, 0x10, 0x7c, 0x8a, 0x04,
	0x24, 0x52, 0x10, 0x27, 0x4e, 0xc9, 0xa1, 0x24, 0x42, 0x45, 0x95, 0xe1, 0x84, 0xb8, 0xac, 0xe3,
	0xb5, 0xb3, 0xc4, 0xf1, 0xae, 0x76, 0x37, 0x82, 0xf0, 0x55, 0x7c, 0x05, 0xdf, 0x85, 0x76, 0x6c,
	0x47, 0x49, 0xd3, 0xdb, 0xbc, 0xf1, 0x9b, 0x99, 0x37, 0x6f, 0xd6, 0x70, 0x91, 0xf3, 0x92, 0x69,
	0x66, 0x86, 0x52, 0x09, 0x23, 0x48, 0xa0, 0x58, 0x5e, 0x8a, 0x5f, 0xf1, 0x47, 0x38, 0xfb, 0xc6,
	0xd7, 0x4c, 0x1b, 0xba, 0x96, 0x24, 0x82, 0xd3, 0xaf, 0x6c, 0x21, 0xaa, 0x4c, 0x47, 0x4e, 0xdf,
	0x19, 0x78, 0x49, 0x0b, 0xc9, 0x15, 0xf8, 0x5f, 0x68, 0x25, 0x74, 0xe4, 0x62, 0xbe, 0x06, 0xf1,
	0x5f, 0x07, 0xfc, 0x5b, 0x5e, 0xb2, 0x7b, 0x72, 0x09, 0x2e, 0xcf, 0xb0, 0xe8, 0x2c, 0x71, 0x79,
	0x46, 0x08, 0x74, 0x34, 0xff, 0xc3, 0x1a, 0x3a, 0xc6, 0xe4, 0x1a, 0x02, 0x2d, 0x36, 0x6a, 0xc1,
	0x22, 0x0f, 0x79, 0x0d, 0xb2, 0x5c, 0x66, 0x68, 0x11, 0x75, 0x30, 0x8b, 0x31, 0xf9, 0x00, 0xe7,
	0x25, 0xd5, 0xe6, 0x4e, 0x64, 0x3c, 0xe7, 0x2c, 0x8b, 0xfc, 0xbe, 0x33, 0x08, 0xc7, 0xbd, 0x61,
	0xad, 0x7a, 0xb8, 0x93, 0x9c, 0x1c, 0xd0, 0x48, 0x1f, 0xc2, 0x85, 0xa8, 0x0c, 0xab, 0xcc, 0x8c,
	0xea, 0x65, 0x14, 0x60, 0xc7, 0xfd, 0x54, 0xbc, 0x82, 0x27, 0xa8, 0x98, 0x2a, 0xb3, 0x27, 0xda,
	0x47, 0xd1, 0xaf, 0xa1, 0x63, 0x4d, 0x42, 0xd1, 0xe1, 0xf8, 0xa2, 0x1d, 0x86, 0xfc, 0x04, 0x3f,
	0x91, 0xb7, 0xd0, 0xa3, 0x5a, 0x33, 0x65, 0xb8, 0xa8, 0xf4, 0x27, 0x25, 0x36, 0x72, 0x9e, 0xe1,
	0x3a, 0x7e, 0x72, 0xfc, 0x21, 0x2e, 0xe0, 0xa9, 0x2d, 0xbe, 0xa3, 0x52, 0xf2, 0xaa, 0xc0, 0x99,
	0x57, 0xe0, 0x67, 0x4c, 0x9a, 0x65, 0x33, 0xb6, 0x06, 0x36, 0xcb, 0xab, 0x8c, 0xfd, 0xc6, 0xd1,
	0x7e, 0x52, 0x03, 0xd2, 0x05, 0x6f, 0xc5, 0xb6, 0x8d, 0x5b, 0x36, 0xb4, 0x16, 0x5a, 0x19, 0xf3,
	0x0c, 0xcd, 0xf2, 0x93, 0x06, 0xc5, 0x3f, 0xe0, 0x72, 0x5a, 0x8a, 0xf4, 0x5e, 0x09, 0x69, 0x25,
	0x30, 0xbd, 0x33, 0xd5, 0xd9, 0x33, 0x35, 0x7e, 0x60, 0xaa, 0x8b, 0xdf, 0x0e, 0x1d, 0x6c, 0x0f,
	0x57, 0x0f, 0xc5, 0x38, 0xde, 0x40, 0x6f, 0xb2, 0xdb, 0xed, 0x33, 0xdb, 0x3e, 0x6a, 0x5e, 0x04,
	0xa7, 0x7a, 0x93, 0xfe, 0x64, 0x0b, 0xd3, 0xf4, 0x6d, 0x21, 0x19, 0x80, 0x9b, 0x4a, 0x6c, 0x18,
	0x8e, 0xaf, 0x5b, 0x53, 0x0f, 0xe5, 0xce, 0x4e, 0x12, 0x37, 0x95, 0xd3, 0x73, 0x00, 0xb9, 0xcb,
	0xc5, 0x13, 0x78, 0x36, 0x39, 0xb4, 0xf4, 0xd1, 0xc1, 0x37, 0x10, 0xac, 0xd8, 0x76, 0x9e, 0xd9,
	0xb7, 0xe9, 0x0d, 0xfc, 0xa9, 0xdb, 0x75, 0x92, 0x26, 0x13, 0xff, 0x73, 0x20, 0xbc, 0xad, 0xdf,
	0x3d, 0xd6, 0xc6, 0xe0, 0xe6, 0x12, 0x6b, 0xc3, 0x71, 0xf7, 0xe0, 0xbe, 0x54, 0x19, 0x2b, 0x22,
	0x97, 0xe4, 0x0d, 0x78, 0xf9, 0x5a, 0x36, 0x8f, 0xe0, 0xf9, 0x3e, 0x69, 0xef, 0x8e, 0xb3, 0x93,
	0xc4, 0xb2, 0xc8, 0x3b, 0xf0, 0xe8, 0xaa, 0x5d, 0xee, 0x45, 0x4b, 0x3e, 0x72, 0xcb, 0xd2, 0xe9,
	0x4a, 0x92, 0x11, 0x78, 0xb4, 0x90, 0x78, 0xbc, 0x70, 0xfc, 0xf2, 0x98, 0xbe, 0xdb, 0x12, 0x0b,
	0x0a, 0x39, 0x0d, 0xa0, 0x23, 0xa9, 0x32, 0xd3, 0x57, 0xdf, 0x6f, 0x0a, 0x6e, 0x96, 0x9b, 0x74,
	0xb8, 0x10, 0xeb, 0x51, 0xa1, 0x28, 0x2f, 0x53, 0x2e, 0x46, 0x75, 0x83, 0x34, 0xc0, 0x7f, 0xfa,
	0xfd, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0x62, 0x93, 0xf4, 0x16, 0xe4, 0x03, 0x00, 0x00,
}
